{% comment %}
  Renders product variant-picker

  Accepts:
  - product: {Object} product object.
  - block: {Object} passing the block information.
  - product_form_id: {String} Id of the product form to which the variant picker is associated.
  Usage:
  {% render 'product-variant-picker', product: product, block: block, product_form_id: product_form_id %}
{% endcomment %}
{%- unless product.has_only_default_variant -%}
  <variant-selects
    id="variant-selects-{{ section.id }}"
    data-section="{{ section.id }}"
    {{ block.shopify_attributes }}
  >
    {%- for option in product.options_with_values -%}
      {%- liquid
        assign swatch_count = option.values | map: 'swatch' | compact | size
        assign picker_type = block.settings.picker_type

        if swatch_count > 0 and block.settings.swatch_shape != 'none'
          if block.settings.picker_type == 'dropdown'
            assign picker_type = 'swatch_dropdown'
          else
            assign picker_type = 'swatch'
          endif
        endif
      -%}
      {%- if picker_type == 'swatch' -%}
        <fieldset class="js product-form__input product-form__input--swatch">
          <legend class="form__label">
            {% render 'product-option-legend', option: option %}
          </legend>
          {% render 'product-variant-options',
            product: product,
            option: option,
            block: block,
            picker_type: picker_type
          %}
        </fieldset>
      {%- elsif picker_type == 'button' -%}
        <fieldset class="js product-form__input product-form__input--pill">
          <legend class="form__label">
            {% render 'product-option-legend', option: option %}
            {% render 'option-content-trigger', option: option %}
          </legend>
          {% render 'product-variant-options',
            product: product,
            option: option,
            block: block,
            picker_type: picker_type
          %}
        </fieldset>
      {%- else -%}
        <div class="product-form__input product-form__input--dropdown">
          <label class="form__label" for="Option-{{ section.id }}-{{ forloop.index0 }}">
            {{ option.name }}
          </label>
          <div class="select">
            {%- if picker_type == 'swatch_dropdown' -%}
              <span
                data-selected-value
                class="dropdown-swatch"
              >
                {% render 'swatch', swatch: option.selected_value.swatch, shape: block.settings.swatch_shape %}
              </span>
            {%- endif -%}
            <select
              id="Option-{{ section.id }}-{{ forloop.index0 }}"
              class="select__select"
              name="options[{{ option.name | escape }}]"
              form="{{ product_form_id }}"
            >
              {% render 'product-variant-options',
                product: product,
                option: option,
                block: block,
                picker_type: picker_type
              %}
            </select>
            <span class="svg-wrapper">
              {{- 'icon-caret.svg' | inline_asset_content -}}
            </span>
          </div>
        </div>
      {%- endif -%}
    {%- endfor -%}

    <script type="application/json" data-selected-variant>
      {{ product.selected_or_first_available_variant | json }}
    </script>
  </variant-selects>
{%- endunless -%}

{% comment %} ! PUT SERVICES DATA ON WINDOW {% endcomment %}
{% comment %} ! THIS PLACE IS FOR PRODUCTS WHICH HAVE ONLY SINGLE VARIANT. for the other one when we have variants, see product-variant-options.liquid {% endcomment %}

{% if product.has_only_default_variant %}
  {% comment %} # REMIX {% endcomment %}

  {% assign remix_model_name = product.selected_or_first_available_variant.metafields.custom_but_hidden.rmx_3d_model.value.name
    | json
  %}

  {% assign remix_model_path = product.selected_or_first_available_variant.metafields.custom_but_hidden.rmx_3d_model.value.name
    | downcase
    | prepend: 'rmx-'
    | append: '.glb'
    | asset_url
  %}
  {% assign racket_frame_color = product.selected_or_first_available_variant.metafields.custom_but_hidden.rmx_racket_frame_color.value
    | default: '#8348ff'
  %}
  {% assign racket_grip_color = product.selected_or_first_available_variant.metafields.custom_but_hidden.rmx_racket_grip_color.value
    | default: '#ffffff'
  %}
  {% assign logo_color = product.selected_or_first_available_variant.metafields.custom_but_hidden.rmx_logo_color.value
    | default: '#ff0000'
  %}
  {% assign sticker_text_color = product.selected_or_first_available_variant.metafields.custom_but_hidden.rmx_sticker_text_color.value
    | default: '#ffffff'
  %}
{% endif %}

<script defer="defer">
    // set window vars here
   window.s3_current_variant_sku = '{{ product.selected_or_first_available_variant.sku | escape }}'
   window.s3_product_name = '{{ product.title | escape }}'

   if (typeof {{remix_model_name | default: false}} === 'string') {
     window.s3_remix_config = {
         racketFrameColor: {{ racket_frame_color | json }},
         racketGripColor: {{ racket_grip_color | json }},
         logoColor: {{ logo_color | json }},
         stickerTextColor: {{ sticker_text_color | json }},
         modelPath: '{{ remix_model_path }}'
     };
  }
</script>
